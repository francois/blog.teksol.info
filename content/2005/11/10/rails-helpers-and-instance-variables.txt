--- 
title:      "Rails Helpers and Instance Variables"
created_at: 2005-11-10 16:39:00
blog_post:  true
tags:       helpers
id:         17
filter:
  - erb
  - textile
--- 
I was reading the code for the "FileColumn":http://www.kanthak.net/opensource/file_column/, helper and I had a thought.  What if we could obviate the need for requiring instance variables for helpers ?

A recent example on the mailing list ?  "render partial and passing in the object":http://thread.gmane.org/gmane.comp.lang.ruby.rails/28873, by Mark Van Holstyn.  In the thread, he asks why he can't do:

<% code("app/controllers/user_controller.rb") do -%>def edit
  @user = User.find_by_id(1)
  render :partial => 'address', :object => @user.address}
end
<% end -%>

His partial being:
<% code("app/views/shared/_address.rhtml", :class => "html") do -%>><#%= text_area('address', 'street') %>
<% end -%>

Reading FileColumn helper's code, and the code in Rails own helpers, the following idiom is used to get a hold of the instance variable:
<% code("file-column-0.3/lib/file_column_helper.rb") do -%>def url_for_file_column(object_name, method, suffix=nil)
  object = instance_variable_get("@#{object_name.to_s}")
  ...
end
<% end -%>

What if we did it this way instead ?

<% code("file-column-0.3x/lib/file_column_helper.rb") do -%>def url_for_file_column(object_name, method, suffix=nil)
  object =  case object_name
            when String, Symbol
              instance_variable_get("@#{object_name.to_s}")
            else
              object_name
            end
  ...
end
<% end -%>

Actually, this should all be abstracted away in some kind of helper for helpers.  Let me take a moment to prepare a patch.  I think this would make things quite a bit easier for partial users.