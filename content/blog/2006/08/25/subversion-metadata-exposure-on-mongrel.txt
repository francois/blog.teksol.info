--- 
title:      "Subversion Metadata Exposure on Mongrel"
created_at: 2006-08-25 11:57:00
blog_post:  true
filter:
  - erb
  - textile
--- 
If you thought you were secure, think again.

Like many, I am using "Capistrano":http://manuals.rubyonrails.com/read/book/17 to deploy my Rails application.  Like many, I also unintentionaly show Subversion metadata to the world.

In "Preventing Subversion Exposure":http://hivelogic.com/articles/2006/04/30/preventing_svn_exposure, "Dan Benjamin":http://hivelogic.com/ talks about how to secure your server if you are using Apache:

<blockquote cite="http://hivelogic.com/articles/2006/04/30/preventing_svn_exposure"><textarea name="code" cols="55" rows="15" title="httpd.conf"><directorymatch "^/.*/\.svn/">
  Order deny,allow
  Deny from all
</directorymatch>
</textarea>
</blockquote>

I am using a clustered deployment environment as described on "Mongrel's LighTTPD":http://mongrel.rubyforge.org/docs/lighttpd.html page:

<p align="center"><img src="http://mongrel.rubyforge.org/docs/SimpleLighttpdMongrelSetup.jpg" /></p>

Except "LighTTP":http://lighttpd.net/ is replaced with "Pound":http://www.apsis.ch/pound/, and "Apache":http://httpd.apache.org/ is just another service.

My <code class="filename">pound.cfg</code> contains this block of code:

<textarea name="code" cols="55" rows="15" title="pound.cfg"># static file serving
Service
  URL ".*\.(jpe?g|gif|png|js|css|xml)"
  BackEnd
    Address 127.0.0.1
    Port 12600
  End
End

Service
  BackEnd
    Address 127.0.0.1
    Port    12500
  End
End
</textarea>

I thought I was not vulnerable to Dan's trick, but it turns out I am.

When "Pound":http://www.apsis.ch/pound/ receives the request, it attempts to match the incoming Path with the URL above.  Since <code class="filename">/.svn/entries</code> does not match, "Pound":http://www.apsis.ch/pound/ proceeds with the next service.  "Mongrel":http://mongrel.rubyforge.org/ has the ability to serve static files too, and it turns out that it is "Mongrel":http://mongrel.rubyforge.org/ which is opening up the security hole.

Until I find how to correct the hole, I am now deploying using the export method:

<textarea name="code" cols="55" rows="15" title="config/deploy.rb">set :checkout, "export"
</textarea>

*UPDATE (2006-08-25)*: Following "John's ":#comment-139 suggestion below, you can also change the "Pound":http://www.apsis.ch/pound/ configuration to this:

<textarea name="code" cols="55" rows="15" title="pound.cfg"># static file serving
Service
  URL ".*\.(jpe?g|gif|png|js|css|xml|svn)"
  BackEnd
    Address 127.0.0.1
    Port 12600
  End
End
</textarea>

Note where "svn" was added to the end of the URL configuration line ?  That tells Pound to send requests for ".svn" to this service (Apache in my case) where the 403 can be processed.

You could also change the URL line to handle CVS, darcs and other version control admin directories.
