--- 
title:      "Enhanced Migrations Plugin Enhancement"
created_at: 2007-11-01 20:54:00
blog_post:  true
filter:
  - erb
  - textile
--- 
I recently hit upon the "Enhanced Migrations":http://revolutiononrails.blogspot.com/2007/02/plugin-release-enhanced-rails.html plugin by "Revolution on Rails":http://revolutiononrails.blogspot.com/.  Works great when you develop on branches.  The <code class="method ruby">#dump_schema_information</code> method of <code class="ruby class">ActiveRecord::ConnectionAdapters::SchemaStatements</code> only dumps the most recently migration file.  Since each migration is now a separate entry in the <code class="sql table">migrations_info</code> table, we can't report only the latest one.

To this end, I generated the following diff:

<% code do -%>$ svn diff vendor
Index: vendor/plugins/enhanced_migrations/lib/enhanced_migrations.rb
===================================================================
--- vendor/plugins/enhanced_migrations/lib/enhanced_migrations.rb       (revision 7767)
+++ vendor/plugins/enhanced_migrations/lib/enhanced_migrations.rb       (working copy)
@@ -58,8 +58,8 @@
 
 ActiveRecord::ConnectionAdapters::SchemaStatements.send(:define_method, :dump_schema_information) do
   begin
-    if (current_schema = ActiveRecord::Migrator.current_version) > 0
-      return "INSERT INTO #{ActiveRecord::Migrator.schema_info_table_name} VALUES (#{current_schema}, NOW())" 
+    select_all("SELECT * FROM #{ActiveRecord::Migrator.schema_info_table_name} ORDER BY created_at, id").map do |migration|
+      "INSERT INTO #{ActiveRecord::Migrator.schema_info_table_name} VALUES(#{migration["id"]}, '#{migration["created_at"]}');\n"
     end
   rescue ActiveRecord::StatementInvalid 
     # No Schema Info
<% end -%>

Hope this is useful for other people.
