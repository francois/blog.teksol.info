--- 
title:      "CriteriaQuery and arbitrary conditions"
created_at: 2006-09-21 19:14:13
blog_post:  true
tags:       tips, plugins
id:         55
filter:
  - erb
  - textile
--- 
"CriteriaQuery":http://www.muermann.org/ruby/criteria_query/ is a "Rails":http://www.rubyonrails.org/ plugin which eases arbitrary query building.

From the "README":http://3columns.net/rubyplayground/projects/criteria_query/trunk/criteria_query/README:

<blockquote>If you frequently face the problem of constructing complex dynamic queries, you will get some benefit out of this.  Consider the following search form (taken from a real application):

<pre>Name (first or last): [               ]
Customer Category:    [ Please Select ][^]
Last call between:    [         ] and [         ]
Active Contacts only: [x]
Address
State:                [               ]
City:                 [               ]          
Street Addres:        [               ]      
</pre>

&hellip;

CriteriaQuery allows you to write the above as:

<% code do -%>pq = Person.query

pq.disjunction.first_name_eq(params[:name]).last_name_eq(params[:name]) if params[:name]
  pq.category_id_eq(params[:category]) if params[:category]
  ...
  address = pq.join("address")
  address.state_eq(params[:address[:state]]) if params[:address[:state]]
  ...
end
<% end -%>
</blockquote>

This is all fine and dandy, except using the current version (r41 from the "repository":http://3columns.net/rubyplayground/projects/criteria_query/trunk/criteria_query), you cannot add arbitrary conditions, such as <code class="sql">LENGTH(name) > 0</code>.

ActiveRecord scopes to the rescue.  I recently hit that in an application where we allow the admin to find only non anonymous estimates.  Non anonymous is defined as having either a phone or an E-Mail address.

<% code do -%>conds = 'LENGTH(phone_number) > 0 OR LENGTH(email) > 0' if @filters[:non_anonymous]
Estimate.with_scope(:find => {:conditions => conds}) do
  @estimates = query.find(:order => 'updated_at DESC')
end
<% end -%>

Of course, you will ask "why in the world aren't your fields <code class="sql">NULL</code> to begin with if they don't contain a value ?"  Now, that is a very interesting question which I will now explore with gusto !
