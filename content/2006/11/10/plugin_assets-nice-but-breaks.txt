--- 
title:      "plugin_assets: nice, but breaks"
created_at: 2006-11-10 20:53:35
blog_post:  true
tags:       plugins
id:         58
filter:
  - erb
  - textile
--- 
Aaron, of "PluginAWeek":http://pluginaweek.com/ fame, released "PluginAssets":http://www.pluginaweek.org/2006/11/09/4-plugin_assets-give-your-plugins-value/.  
This plugin handles copying assets from your plugins to your <code class="folder">public/</code> folder.  I decided to give it a whirl, since I needed it for a plugin I'm writing.

I use "Piston":http://piston.rubyforge.org/ to manage my external dependencies, so I simply Pistoned the code from Aaron's repository:

<% code(:lang => "shell") do -%>$ piston import \
    http://svn.pluginaweek.org/trunk/plugins/action_pack/plugin_assets \
    vendor/plugins/plugin_assets
Exported r85 from 'http://svn.pluginaweek.org/trunk/plugins/action_pack/plugin_assets' to 'vendor/plugins/plugin_assets'

$ rake assets:update
(in D:/wwwroot/staging.teksol.info)
rake aborted!
undefined method `require_plugin' for #<Object:0x27bfa3c>

(See full trace by running task with --trace)
<% end -%>

Oops, not good...  So, two dependencies later:

<% code(:lang => "shell") do -%>$ piston import \
    http://svn.pluginaweek.org/trunk/plugins/rails/loaded_plugins \
    vendor/plugins/loaded_plugins
Exported r85 from 'http://svn.pluginaweek.org/trunk/plugins/rails/loaded_plugins' to 'vendor/plugins/loaded_plugins'

$ piston import \
    http://svn.pluginaweek.org/trunk/plugins/rails/plugin_dependencies \
    vendor/plugins/plugin_dependencies
Exported r85 from 'http://svn.pluginaweek.org/trunk/plugins/rails/plugin_dependencies' to 'vendor/plugins/plugin_dependencies'

$ rake --trace assets:update
(in D:/staging.teksol.info)
** Invoke assets:update (first_time)
** Invoke environment (first_time)
** Execute environment
rake aborted!
undefined method `require_plugin' for #<Object:0x27bfa3c>
D:/staging.teksol.info/config/../vendor/plugins/plugin_assets/lib/plugin_assets.rb:1
<% end -%>

Whoa, this is even worse.  I have to apply a known "workaround" to get <code>plugin_assets</code> to load:
<% code(:lang => "shell") do -%>$ mv vendor/plugins/plugin_dependencies \
     vendor/plugins/aaa_plugin_dependencies
$ mv vendor/plugins/loaded_plugins \
     vendor/plugins/aaa_loaded_plugins
$ rake assets:update
(in D:/wwwroot/staging.teksol.info)

Mirroring assets for link_with_icon:
...
<% end -%>

It does look like the dependencies aren't well considered here.  Mind you, Aaron is doing a fantastic job.

*Update 2006-11-10 3 PM EDT*: Aaron did a nice job of reworking the code to not require as many dependencies.  Read "Revisited: plugin_assets and loaded_plugins":http://www.pluginaweek.org/2006/11/10/revisited-plugin_assets-and-loaded_plugins/ for the details.