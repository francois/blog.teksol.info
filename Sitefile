
task :default => :build

desc 'deploy the site to the webserver'
task :deploy => [:build_tags_indexes, :build, 'deploy:rsync']

SITE.rsync_args = ["--archive", "--human-readable", "--verbose", "--compress", "--checksum", "--delete", "--force", "--exclude=.DS_Store", "--exclude=.gitignore", "--exclude=.cairn"]
SITE.output_dir = "output"
SITE.user       = "fbeausoleil"
SITE.host       = "blog.teksol.info"
SITE.remote_dir = "/home/fbeausoleil/blog.teksol.info/"
SITE.blog_dir   = ""

task :build_tags_indexes do
  require "rubygems"
  require "active_support"

  Webby::Builder.new.load_files
  tags = Hash.new {|h, k| h[k] = Array.new}
  Webby::Resources.pages.find(:all, :blog_post => true).map do |page|
    next unless page.tags
    page.tags.each do |tag|
      tags[tag] << page
    end
  end

  File.open(File.dirname(__FILE__) + "/content/tags/index.txt", "w") do |io|
    puts "Building tags index"
    io.puts <<EOF
---
title:      "Tags Index"
created_at: #{Time.now.strftime("%Y-%m-%d %H:%M:%S")}
blog_post:  false
layout:     default
filter:
  - erb
  - textile
---
EOF

    tags.sort_by {|k, v| v.length}.reverse.each do |tag, pages|
      latest = pages.sort_by(&:created_at).last
      io.puts <<EOF
<h2>#{tag.humanize} <span class="count">#{pages.length} articles</span></h2>
<% @pages.find(:all) {|page| page.id == #{latest.id}}.each do |page| -%>
<div class="post">
  <div class="header">
    <h3><%= link_to_page(page.title) %></h3>
    <div class="date"><%= page.created_at[0, 10]%></div>
  </div>
  <div class="content">
    <p>
      <%= render(page) %>
    </p>
  </div>
  <div class="footer">
    <%= comments_count(page) %>
  </div>
</div>
<% end -%>
<p><a href="<%= absolute_url("/tags/#{tag}.html") %>">See all #{pages.length} articles in #{tag}</a></p>
EOF
    end
  end

  FileUtils.mkdir_p(File.dirname(__FILE__) + "/content/tags")
  tags.each_pair do |tag, pages|
    puts "Building #{tag} (#{pages.length} articles)"
    filename = File.dirname(__FILE__) + "/content/tags/#{tag}.txt"
    File.open(filename, "w") do |io|
      io.puts <<EOF
---
title:      "#{tag}"
created_at: #{Time.now.strftime("%Y-%m-%d %H:%M:%S")}
blog_post:  false
layout:     default
filter:
  - erb
  - textile
---
EOF

      io.puts <<EOF
<% @pages.find(:all) {|page| #{pages.map(&:id).inspect}.include?(page.id)}.sort_by(&:created_at).reverse.each do |page| -%>
<div class="post">
  <div class="header">
    <h3><%= link_to_page(page.title) %></h3>
    <div class="date"><%= page.created_at[0, 10]%></div>
  </div>
  <div class="content">
    <p>
      <%= render(page) %>
    </p>
  </div>
  <div class="footer">
    <%= comments_count(page) %>
  </div>
</div>
<% end -%>
EOF
    end
  end
end

namespace :twitter do
  task :post do
    require "rest_client"
    require "builder"
    require "tweet"
    last = Dir["content/2*/**/*"].sort.last
    page = YAML.load_file(last)
    url  = "http://blog.teksol.info/" + last.sub(".txt", "")

    response = RestClient.post("http://tinyurl.com/api-create.php", "url" => url)
    Tweet.create_status "#{page["title"]}: #{response}"
  end
end
